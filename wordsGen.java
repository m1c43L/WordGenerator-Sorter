/*
 * To help one in answering a word scramble puzzle, this program
 * generate words from given sets of characters. the words generated
 * in this file came from a words.txt file that I copied from 
 * "http://www.mieliestronk.com/wordlist.html" which is clearly not mine.
 * To be consice, this program is simply a word sorter; nonetheless, I want
 * to call it word generator.
 */

package cheat;
import java.awt.Component;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.OutputStream;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 * @author Michael Gilbert
 * @version 01-16-18
 */
public class wordsGen extends javax.swing.JFrame {

    /**
     * Creates new form wordsGen
     */
    public wordsGen() {
        initComponents();      
        
    }
    
    Vector prev = new Vector(); // stores previous
    boolean caps = false, haveEveryLetter = true; // markers
    
    //update the result text area
    private void printS(Vector in)
    {       
        prev = in;
        String x = "";
        StringBuilder s = new StringBuilder();
        
        for(int i = 0; i < in.size(); i++)
        { 
            x = in.get(i).toString();
            if(caps) x = x.toUpperCase();
            else x = x.toLowerCase();
            
            if(i%3 == 2 )s.append(x+"\n"); 
            else s.append(x+"\t\t");            
        }
                             
        //update panel
        resultsCounter.setText("Result (s) : "+ in.size());
        text.setText(s.toString());
    }
    
    // get chars from input field in lowercase
    private String getChars()
    { return this.inputField.getText().toLowerCase(); }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        showaAllBtn = new javax.swing.JButton();
        resultsCounter = new javax.swing.JLabel();
        jToggleButton2 = new javax.swing.JToggleButton();
        selector = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        text = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Word Generator");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(700, 325));

        inputField.setText("Type letters here ....");
        inputField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                inputFieldMousePressed(evt);
            }
        });

        jLabel1.setText("Input Here:");

        jButton1.setText("1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("5");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("6");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel2.setText("Number(s) of letters in the word");

        showaAllBtn.setText("Show All");
        showaAllBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showaAllBtnActionPerformed(evt);
            }
        });

        resultsCounter.setText("Result (s) : 0 ");

        jToggleButton2.setText("CapsLock");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        selector.setText("All");
        selector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectorActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Letters from input that made up the words :");

        text.setColumns(20);
        text.setRows(5);
        jScrollPane1.setViewportView(text);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(inputField, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jToggleButton2))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selector, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addComponent(jButton2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton5)
                                    .addComponent(jButton3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(showaAllBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(398, 398, 398)
                .addComponent(resultsCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton4)
                        .addComponent(jButton3)
                        .addComponent(jButton1)
                        .addComponent(inputField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jToggleButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(jButton5)
                        .addComponent(jButton6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selector, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showaAllBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultsCounter)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //generate word of length 2
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        try{
            if(haveEveryLetter)  printS(getWords(2,getChars()));
            else printS(getContains(2,getChars()));
        }  catch (FileNotFoundException ex)  {
          JOptionPane.showMessageDialog(rootPane, 
                  "File not Found!\n Include the 'word.txt' file in this direcory.");
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed
    
    //generate word of length 1
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            if(haveEveryLetter)  printS(getWords(1,getChars()));
            else printS(getContains(1,getChars()));
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(rootPane, 
                    "File not Found!\n Include the 'word.txt' file in this direcory.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    //generate word of length 3
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            if(haveEveryLetter)  printS(getWords(3,getChars()));
            else printS(getContains(3,getChars()));
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(rootPane, 
                    "File not Found!\n Include the 'word.txt' file in this direcory.");
        }
    }//GEN-LAST:event_jButton3ActionPerformed
    
    //generate word of length 5
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            if(haveEveryLetter)  printS(getWords(5,getChars()));
            else printS(getContains(5,getChars()));
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(rootPane, 
                    "File not Found!\n Include the 'word.txt' file in this direcory.");
        }
    }//GEN-LAST:event_jButton5ActionPerformed
    
    //generate word of length 4
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            if(haveEveryLetter)  printS(getWords(4,getChars()));
            else printS(getContains(4,getChars()));
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(rootPane, 
                    "File not Found!\n Include the 'word.txt' file in this direcory.");
        }
    }//GEN-LAST:event_jButton4ActionPerformed
    
    //generate word of length 6
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            if(haveEveryLetter)  printS(getWords(6,getChars()));
            else printS(getContains(6,getChars()));
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(rootPane, 
                    "File not Found!\n Include the 'word.txt' file in this direcory.");
        }
    }//GEN-LAST:event_jButton6ActionPerformed
    
    //generate word of any length
    private void showaAllBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showaAllBtnActionPerformed
        try 
        {
            if(haveEveryLetter)  printS(getAllWords(getChars()));
            else printS(getAllContains(getChars()));
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(rootPane, 
                    "File not Found!\n Include the 'word.txt' file in this direcory.");
        }
    }//GEN-LAST:event_showaAllBtnActionPerformed
    
    //change to uppercase <-> lowercase
    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        if(caps)
        {
            caps = false;
            printS(prev);
        }
        else
        {
            caps = true;
            printS(prev);
        }
    }//GEN-LAST:event_jToggleButton2ActionPerformed
    
    //clear input
    private void inputFieldMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inputFieldMousePressed
        inputField.setText("");
    }//GEN-LAST:event_inputFieldMousePressed

    //output must contain only characters from input 
    //or output must contain atleaset one char from input
    private void selectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectorActionPerformed
        if(haveEveryLetter){ haveEveryLetter = false; selector.setText("Some");}
        else {haveEveryLetter = true; selector.setText("All"); }
    }//GEN-LAST:event_selectorActionPerformed
    
    //change char at certain index
    private String set(String s, int indx)
    {
        char [] temp = s.toCharArray();
        temp[indx] = '!';
        return String.valueOf(temp);
    }
    
    private Vector getContains(int n, String l) throws FileNotFoundException
    {
        Vector words = new Vector<String>();
        File word_File = new File("words.txt");
        Scanner in = new Scanner(word_File);
        String w = "";
        while(in.hasNext())
        {
            w = in.next();
            for(int i = 0; i < l.length(); i++)
            {
                if(n == w.length() && w.contains(l.charAt(i)+"")) 
                {  words.add(w); break;  }
            }            
        }
        return words;
    } 
    
    private Vector getAllContains(String l) throws FileNotFoundException
    {
        Vector words = new Vector<String>();
        File word_File = new File("words.txt");
        Scanner in = new Scanner(word_File);
        String w = "";
        while(in.hasNext())
        {
            w = in.next();
            for(int i = 0; i < l.length(); i++)
            {
                if( w.contains(l.charAt(i)+"")) 
                {  words.add(w); break; }
            }            
        }
        return words;
    }
    
    private Vector getAllWords(String l) throws FileNotFoundException
    {
        Vector words = new Vector<String>();
        File word_File = new File("words.txt");
        Scanner in = new Scanner(word_File);
        String w = "", wtemp = "";
        while(in.hasNext())
        {
            w = in.next();
            wtemp = w.substring(0, w.length());
            
                int count = 0;
                for(int i = 0; i < l.length(); i ++)
                {  
                    
                    for(int j = 0; j < w.length(); j++)
                    {
                        if(wtemp.charAt(j) == l.charAt(i))
                        {  count++; wtemp = set(wtemp,j); break;}
                    }
                    if(count == w.length()){ words.add(w);  break;}               
                }           
        }
        return words;
    } 
    
    private Vector getWords(int n,String l) throws FileNotFoundException
    {
        Vector words = new Vector<String>();
        File word_File = new File("words.txt");
        Scanner in = new Scanner(word_File);
        String w = "", wtemp = "";
        
        while(in.hasNext())
        {
            w = in.next();
            wtemp = w.substring(0, w.length());
            if(w.length() == n)
            {
                int count = 0;
                for(int i = 0; i < l.length(); i ++)
                {  
                    
                    for(int j = 0; j < w.length(); j++)
                    {
                        if(wtemp.charAt(j) == l.charAt(i))
                        {  count++; wtemp = set(wtemp,j); break;}
                    }
                    if(count == n){ words.add(w);  break;}
                } 
            }           
        }
        return words;
    }
    
    
    /** Main method
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(wordsGen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(wordsGen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(wordsGen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(wordsGen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new wordsGen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField inputField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JLabel resultsCounter;
    private javax.swing.JButton selector;
    private javax.swing.JButton showaAllBtn;
    private javax.swing.JTextArea text;
    // End of variables declaration//GEN-END:variables
}
